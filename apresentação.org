#+Title: Vôo de Pássaro: Functional Reactive Programming
#+Author: Thales Macedo Garitezi

#+Startup: showeverything

#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js@3.8.0
# ,##+REVEAL_ROOT: file:///home/thales/Downloads/reveal.js-3.8.0/
#+REVEAL_THEME: black
#+REVEAL_MIN_SCALE: 0.3
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_EXTRA_CSS: ./style.css
#+OPTIONS: toc:1

* O que é FRP?

/Um modelo para valores que dependem do tempo./

*** \\

- Declarativo :: o quê vs. como (ou modelo vs. apresentação)
- Puro :: estado (tempo) explícito
- Contínuo :: implementação
- Componível ::

* Elementos básicos

- Comportamentos
#+BEGIN_SRC haskell
-- | Comportamentos
Behavior a = Time -> a

-- | Eventos
Event a = [(Time, a)]
#+END_SRC

* Usos

- Interfaces gráficas.
- Jogos.

* Netwire

Ertugrul Söylemez (1985 - 12/05/2018)

Último release: 25/03/2018

* Referências

- FRP segundo Conal Elliott :: https://stackoverflow.com/a/1030631/2708711
- Tese do Evan Czaplicki :: https://elm-lang.org/assets/papers/concurrent-frp.pdf

* Apêndice

** FRP vs. CSP

São duas abstrações para descrever sistemas dinâmicos / concorrência.

CSP é um formalismo para descrever sistemas concorrentes cujos
processos que o compõem interagem através de eventos de comunicação.[fn:roscoe]

Enquanto FRP descreve /comportamentos e eventos/ que dependem
diretamente do tempo e primitivas para combiná-los em novos
/comportamentos/, CSP descreve o /alfabeto/ que /processos/ podem usar
para comunicar-se entre si e com o ambiente.

[fn:roscoe] The theory and practice of concurrency. A. W. Roscoe, 1998.
